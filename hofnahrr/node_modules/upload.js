var Resource = require('deployd/lib/resource'), 
    util = require('util'),
    formidable = require('formidable'),
    FileUploadHanlder = require('file-upload-handler');

function Upload(options) {
    Resource.apply(this, arguments);
}

Upload.label = 'Upload';
Upload.defaultPath = '/upload';


util.inherits(Upload, Resource);

Upload.basicDashboard = {
    settings: [{
        name: 'path',
        type: 'text',
        description: 'Path to save files to'
    }]
};

Upload.prototype.handle = function (ctx, next) {
    var req = ctx.req,
        res = ctx.res,
        form,
        uploadSuccess, uploadError,
        path = '../public/' + this.config.path;

    if (req && req.method !== 'POST') {
        return next();
    }

    uploadSuccess = function (e) {
        e.success = true;
        ctx.done(null, e);
    };

    uploadError = function (e) {
        res.end(e, {
            success : false,
            message : 'something wrent wrong with the upload'
        });
    };

    form = new formidable.IncomingForm();

    form.parse(req, function (err, fields, files) {
        if (files) {
            FileUploadHanlder.FileUploadHandler
                .create({
                    imageDir : path
                })
                .writeFile(files.File, uploadError, uploadSuccess);
        }
        
    });
    

    // When content-type is not application/json or 
    // application/x-www-form-urlencoded deployd pauses the req. So to make the
    // request work, it has to be resumed.
    req.resume();
};



module.exports = Upload;
